datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id                  String              @id @default(cuid())
    name                String
    email               String              @unique
    password            String
    role                Role
    skills              String[]
    interests           String[]
    bio                 String?
    createdAt           DateTime            @default(now())
    updatedAt           DateTime            @updatedAt
    sentRequests        MentorshipRequest[] @relation("SentRequests")
    receivedRequests    MentorshipRequest[] @relation("ReceivedRequests")
    sentConnections     Connection[]        @relation("FromConnections")
    receivedConnections Connection[]        @relation("ToConnections")
    notifications       Notification[]
}

model MentorshipRequest {
    id         String        @id @default(cuid())
    senderId   String
    receiverId String
    status     RequestStatus
    createdAt  DateTime      @default(now())
    updatedAt  DateTime      @updatedAt
    sender     User          @relation("SentRequests", fields: [senderId], references: [id])
    receiver   User          @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

model Connection {
    id         String           @id @default(cuid())
    fromUser   User             @relation("FromConnections", fields: [fromUserId], references: [id])
    fromUserId String
    toUser     User             @relation("ToConnections", fields: [toUserId], references: [id])
    toUserId   String
    status     ConnectionStatus @default(PENDING)
    createdAt  DateTime         @default(now())
    updatedAt  DateTime         @updatedAt
}

model Notification {
    id           String   @id @default(cuid())
    user         User     @relation(fields: [userId], references: [id])
    userId       String
    type         String
    message      String
    read         Boolean  @default(false)
    connectionId String?
    createdAt    DateTime @default(now())
}

enum Role {
    MENTOR
    MENTEE
}

enum RequestStatus {
    PENDING
    ACCEPTED
    DECLINED
}

enum ConnectionStatus {
    PENDING
    ACCEPTED
    REJECTED
}
